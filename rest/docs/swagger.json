{
    "swagger": "2.0",
    "info": {
        "description": "Sample CRUD api for estuary db",
        "title": "Sample CRUD api for estuary db",
        "contact": {
            "name": "Me",
            "url": "http://me.com/terms.html",
            "email": "me@me.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3030",
    "basePath": "/",
    "paths": {
        "/authtokens": {
            "get": {
                "description": "GetAllAuthTokens is a handler to get a slice of record(s) from auth_tokens table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthTokens"
                ],
                "summary": "Get list of AuthTokens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.AuthToken"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to auth_tokens table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthTokens"
                ],
                "summary": "Add an record to auth_tokens table",
                "parameters": [
                    {
                        "description": "Add AuthTokens",
                        "name": "AuthTokens",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AuthToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AuthToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/authtokens/{argID}": {
            "get": {
                "description": "GetAuthTokens is a function to get a single record from the auth_tokens table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthTokens"
                ],
                "summary": "Get record from table AuthTokens by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AuthToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from auth_tokens table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthTokens"
                ],
                "summary": "Update an record in table auth_tokens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update AuthTokens record",
                        "name": "AuthTokens",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AuthToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AuthToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from auth_tokens table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthTokens"
                ],
                "summary": "Delete a record from auth_tokens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.AuthToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/autoretrieves": {
            "get": {
                "description": "GetAllAutoretrieves is a handler to get a slice of record(s) from autoretrieves table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autoretrieves"
                ],
                "summary": "Get list of Autoretrieves",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Autoretrieve"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to autoretrieves table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autoretrieves"
                ],
                "summary": "Add an record to autoretrieves table",
                "parameters": [
                    {
                        "description": "Add Autoretrieves",
                        "name": "Autoretrieves",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Autoretrieve"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Autoretrieve"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/autoretrieves/{argID}": {
            "get": {
                "description": "GetAutoretrieves is a function to get a single record from the autoretrieves table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autoretrieves"
                ],
                "summary": "Get record from table Autoretrieves by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Autoretrieve"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from autoretrieves table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autoretrieves"
                ],
                "summary": "Update an record in table autoretrieves",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Autoretrieves record",
                        "name": "Autoretrieves",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Autoretrieve"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Autoretrieve"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from autoretrieves table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autoretrieves"
                ],
                "summary": "Delete a record from autoretrieves",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.Autoretrieve"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collectionrefs": {
            "get": {
                "description": "GetAllCollectionRefs is a handler to get a slice of record(s) from collection_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionRefs"
                ],
                "summary": "Get list of CollectionRefs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.CollectionRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to collection_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionRefs"
                ],
                "summary": "Add an record to collection_refs table",
                "parameters": [
                    {
                        "description": "Add CollectionRefs",
                        "name": "CollectionRefs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CollectionRef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CollectionRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collectionrefs/{argID}": {
            "get": {
                "description": "GetCollectionRefs is a function to get a single record from the collection_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionRefs"
                ],
                "summary": "Get record from table CollectionRefs by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CollectionRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from collection_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionRefs"
                ],
                "summary": "Update an record in table collection_refs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update CollectionRefs record",
                        "name": "CollectionRefs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CollectionRef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CollectionRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from collection_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionRefs"
                ],
                "summary": "Delete a record from collection_refs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.CollectionRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "description": "GetAllCollections is a handler to get a slice of record(s) from collections table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Get list of Collections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Collection"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to collections table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Add an record to collections table",
                "parameters": [
                    {
                        "description": "Add Collections",
                        "name": "Collections",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collections/{argID}": {
            "get": {
                "description": "GetCollections is a function to get a single record from the collections table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Get record from table Collections by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from collections table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Update an record in table collections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Collections record",
                        "name": "Collections",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from collections table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Delete a record from collections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/contentdeals": {
            "get": {
                "description": "GetAllContentDeals is a handler to get a slice of record(s) from content_deals table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ContentDeals"
                ],
                "summary": "Get list of ContentDeals",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.ContentDeal"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to content_deals table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ContentDeals"
                ],
                "summary": "Add an record to content_deals table",
                "parameters": [
                    {
                        "description": "Add ContentDeals",
                        "name": "ContentDeals",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ContentDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContentDeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/contentdeals/{argID}": {
            "get": {
                "description": "GetContentDeals is a function to get a single record from the content_deals table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ContentDeals"
                ],
                "summary": "Get record from table ContentDeals by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContentDeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from content_deals table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ContentDeals"
                ],
                "summary": "Update an record in table content_deals",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ContentDeals record",
                        "name": "ContentDeals",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ContentDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContentDeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from content_deals table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ContentDeals"
                ],
                "summary": "Delete a record from content_deals",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.ContentDeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/contents": {
            "get": {
                "description": "GetAllContents is a handler to get a slice of record(s) from contents table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contents"
                ],
                "summary": "Get list of Contents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Content"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to contents table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contents"
                ],
                "summary": "Add an record to contents table",
                "parameters": [
                    {
                        "description": "Add Contents",
                        "name": "Contents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Content"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Content"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/contents/{argID}": {
            "get": {
                "description": "GetContents is a function to get a single record from the contents table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contents"
                ],
                "summary": "Get record from table Contents by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Content"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from contents table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contents"
                ],
                "summary": "Update an record in table contents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Contents record",
                        "name": "Contents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Content"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Content"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from contents table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contents"
                ],
                "summary": "Delete a record from contents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.Content"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/ddl": {
            "get": {
                "description": "GetDdlEndpoints is a function to get a list of ddl endpoints available for tables in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TableInfo"
                ],
                "summary": "Gets a list of ddl endpoints available for tables in the estuary database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CrudAPI"
                        }
                    }
                }
            }
        },
        "/ddl/{argID}": {
            "get": {
                "description": "GetDdl is a function to get table info for a table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TableInfo"
                ],
                "summary": "Get table info for a table in the estuary database by argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CrudAPI"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/dealers": {
            "get": {
                "description": "GetAllDealers is a handler to get a slice of record(s) from dealers table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dealers"
                ],
                "summary": "Get list of Dealers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Dealer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to dealers table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dealers"
                ],
                "summary": "Add an record to dealers table",
                "parameters": [
                    {
                        "description": "Add Dealers",
                        "name": "Dealers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Dealer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dealer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/dealers/{argID}": {
            "get": {
                "description": "GetDealers is a function to get a single record from the dealers table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dealers"
                ],
                "summary": "Get record from table Dealers by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dealer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from dealers table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dealers"
                ],
                "summary": "Update an record in table dealers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Dealers record",
                        "name": "Dealers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Dealer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dealer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from dealers table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dealers"
                ],
                "summary": "Delete a record from dealers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.Dealer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/dferecords": {
            "get": {
                "description": "GetAllDfeRecords is a handler to get a slice of record(s) from dfe_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DfeRecords"
                ],
                "summary": "Get list of DfeRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.DfeRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to dfe_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DfeRecords"
                ],
                "summary": "Add an record to dfe_records table",
                "parameters": [
                    {
                        "description": "Add DfeRecords",
                        "name": "DfeRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DfeRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DfeRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/dferecords/{argID}": {
            "get": {
                "description": "GetDfeRecords is a function to get a single record from the dfe_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DfeRecords"
                ],
                "summary": "Get record from table DfeRecords by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DfeRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from dfe_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DfeRecords"
                ],
                "summary": "Update an record in table dfe_records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update DfeRecords record",
                        "name": "DfeRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DfeRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DfeRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from dfe_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DfeRecords"
                ],
                "summary": "Delete a record from dfe_records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.DfeRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/invitecodes": {
            "get": {
                "description": "GetAllInviteCodes is a handler to get a slice of record(s) from invite_codes table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InviteCodes"
                ],
                "summary": "Get list of InviteCodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.InviteCode"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to invite_codes table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InviteCodes"
                ],
                "summary": "Add an record to invite_codes table",
                "parameters": [
                    {
                        "description": "Add InviteCodes",
                        "name": "InviteCodes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InviteCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.InviteCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/invitecodes/{argID}": {
            "get": {
                "description": "GetInviteCodes is a function to get a single record from the invite_codes table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InviteCodes"
                ],
                "summary": "Get record from table InviteCodes by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.InviteCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from invite_codes table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InviteCodes"
                ],
                "summary": "Update an record in table invite_codes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update InviteCodes record",
                        "name": "InviteCodes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InviteCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.InviteCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from invite_codes table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InviteCodes"
                ],
                "summary": "Delete a record from invite_codes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.InviteCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/minerstorageasks": {
            "get": {
                "description": "GetAllMinerStorageAsks is a handler to get a slice of record(s) from miner_storage_asks table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinerStorageAsks"
                ],
                "summary": "Get list of MinerStorageAsks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.MinerStorageAsk"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to miner_storage_asks table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinerStorageAsks"
                ],
                "summary": "Add an record to miner_storage_asks table",
                "parameters": [
                    {
                        "description": "Add MinerStorageAsks",
                        "name": "MinerStorageAsks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MinerStorageAsk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MinerStorageAsk"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/minerstorageasks/{argID}": {
            "get": {
                "description": "GetMinerStorageAsks is a function to get a single record from the miner_storage_asks table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinerStorageAsks"
                ],
                "summary": "Get record from table MinerStorageAsks by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MinerStorageAsk"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from miner_storage_asks table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinerStorageAsks"
                ],
                "summary": "Update an record in table miner_storage_asks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update MinerStorageAsks record",
                        "name": "MinerStorageAsks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MinerStorageAsk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MinerStorageAsk"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from miner_storage_asks table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinerStorageAsks"
                ],
                "summary": "Delete a record from miner_storage_asks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.MinerStorageAsk"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/objects": {
            "get": {
                "description": "GetAllObjects is a handler to get a slice of record(s) from objects table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Get list of Objects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Object"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to objects table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Add an record to objects table",
                "parameters": [
                    {
                        "description": "Add Objects",
                        "name": "Objects",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/objects/{argID}": {
            "get": {
                "description": "GetObjects is a function to get a single record from the objects table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Get record from table Objects by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from objects table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Update an record in table objects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Objects record",
                        "name": "Objects",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from objects table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Delete a record from objects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/objrefs": {
            "get": {
                "description": "GetAllObjRefs is a handler to get a slice of record(s) from obj_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjRefs"
                ],
                "summary": "Get list of ObjRefs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.ObjRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to obj_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjRefs"
                ],
                "summary": "Add an record to obj_refs table",
                "parameters": [
                    {
                        "description": "Add ObjRefs",
                        "name": "ObjRefs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ObjRef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ObjRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/objrefs/{argID}": {
            "get": {
                "description": "GetObjRefs is a function to get a single record from the obj_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjRefs"
                ],
                "summary": "Get record from table ObjRefs by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ObjRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from obj_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjRefs"
                ],
                "summary": "Update an record in table obj_refs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ObjRefs record",
                        "name": "ObjRefs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ObjRef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ObjRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from obj_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjRefs"
                ],
                "summary": "Delete a record from obj_refs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.ObjRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/piececommrecords": {
            "get": {
                "description": "GetAllPieceCommRecords is a handler to get a slice of record(s) from piece_comm_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PieceCommRecords"
                ],
                "summary": "Get list of PieceCommRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.PieceCommRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to piece_comm_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PieceCommRecords"
                ],
                "summary": "Add an record to piece_comm_records table",
                "parameters": [
                    {
                        "description": "Add PieceCommRecords",
                        "name": "PieceCommRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PieceCommRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PieceCommRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/piececommrecords/{argData}": {
            "get": {
                "description": "GetPieceCommRecords is a function to get a single record from the piece_comm_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PieceCommRecords"
                ],
                "summary": "Get record from table PieceCommRecords by  argData",
                "operationId": "argData",
                "parameters": [
                    {
                        "type": "string",
                        "description": "data",
                        "name": "argData",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PieceCommRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from piece_comm_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PieceCommRecords"
                ],
                "summary": "Update an record in table piece_comm_records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "data",
                        "name": "argData",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update PieceCommRecords record",
                        "name": "PieceCommRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PieceCommRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PieceCommRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from piece_comm_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PieceCommRecords"
                ],
                "summary": "Delete a record from piece_comm_records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "data",
                        "name": "argData",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.PieceCommRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/proposalrecords": {
            "get": {
                "description": "GetAllProposalRecords is a handler to get a slice of record(s) from proposal_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProposalRecords"
                ],
                "summary": "Get list of ProposalRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.ProposalRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to proposal_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProposalRecords"
                ],
                "summary": "Add an record to proposal_records table",
                "parameters": [
                    {
                        "description": "Add ProposalRecords",
                        "name": "ProposalRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProposalRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProposalRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/proposalrecords/{argPropCid}": {
            "get": {
                "description": "GetProposalRecords is a function to get a single record from the proposal_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProposalRecords"
                ],
                "summary": "Get record from table ProposalRecords by  argPropCid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prop_cid",
                        "name": "argPropCid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProposalRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from proposal_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProposalRecords"
                ],
                "summary": "Update an record in table proposal_records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prop_cid",
                        "name": "argPropCid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ProposalRecords record",
                        "name": "ProposalRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProposalRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProposalRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from proposal_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProposalRecords"
                ],
                "summary": "Delete a record from proposal_records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prop_cid",
                        "name": "argPropCid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.ProposalRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/retrievalfailurerecords": {
            "get": {
                "description": "GetAllRetrievalFailureRecords is a handler to get a slice of record(s) from retrieval_failure_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalFailureRecords"
                ],
                "summary": "Get list of RetrievalFailureRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.RetrievalFailureRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to retrieval_failure_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalFailureRecords"
                ],
                "summary": "Add an record to retrieval_failure_records table",
                "parameters": [
                    {
                        "description": "Add RetrievalFailureRecords",
                        "name": "RetrievalFailureRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalFailureRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalFailureRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/retrievalfailurerecords/{argID}": {
            "get": {
                "description": "GetRetrievalFailureRecords is a function to get a single record from the retrieval_failure_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalFailureRecords"
                ],
                "summary": "Get record from table RetrievalFailureRecords by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalFailureRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from retrieval_failure_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalFailureRecords"
                ],
                "summary": "Update an record in table retrieval_failure_records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update RetrievalFailureRecords record",
                        "name": "RetrievalFailureRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalFailureRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalFailureRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from retrieval_failure_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalFailureRecords"
                ],
                "summary": "Delete a record from retrieval_failure_records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalFailureRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/retrievalsuccessrecords": {
            "get": {
                "description": "GetAllRetrievalSuccessRecords is a handler to get a slice of record(s) from retrieval_success_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalSuccessRecords"
                ],
                "summary": "Get list of RetrievalSuccessRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.RetrievalSuccessRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to retrieval_success_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalSuccessRecords"
                ],
                "summary": "Add an record to retrieval_success_records table",
                "parameters": [
                    {
                        "description": "Add RetrievalSuccessRecords",
                        "name": "RetrievalSuccessRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalSuccessRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalSuccessRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/retrievalsuccessrecords/{argPropCid}": {
            "get": {
                "description": "GetRetrievalSuccessRecords is a function to get a single record from the retrieval_success_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalSuccessRecords"
                ],
                "summary": "Get record from table RetrievalSuccessRecords by  argPropCid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prop_cid",
                        "name": "argPropCid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalSuccessRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from retrieval_success_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalSuccessRecords"
                ],
                "summary": "Update an record in table retrieval_success_records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prop_cid",
                        "name": "argPropCid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update RetrievalSuccessRecords record",
                        "name": "RetrievalSuccessRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalSuccessRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalSuccessRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from retrieval_success_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalSuccessRecords"
                ],
                "summary": "Delete a record from retrieval_success_records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prop_cid",
                        "name": "argPropCid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalSuccessRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/shuttles": {
            "get": {
                "description": "GetAllShuttles is a handler to get a slice of record(s) from shuttles table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shuttles"
                ],
                "summary": "Get list of Shuttles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Shuttle"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to shuttles table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shuttles"
                ],
                "summary": "Add an record to shuttles table",
                "parameters": [
                    {
                        "description": "Add Shuttles",
                        "name": "Shuttles",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Shuttle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Shuttle"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/shuttles/{argID}": {
            "get": {
                "description": "GetShuttles is a function to get a single record from the shuttles table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shuttles"
                ],
                "summary": "Get record from table Shuttles by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Shuttle"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from shuttles table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shuttles"
                ],
                "summary": "Update an record in table shuttles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Shuttles record",
                        "name": "Shuttles",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Shuttle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Shuttle"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from shuttles table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shuttles"
                ],
                "summary": "Delete a record from shuttles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.Shuttle"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/storageminers": {
            "get": {
                "description": "GetAllStorageMiners is a handler to get a slice of record(s) from storage_miners table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StorageMiners"
                ],
                "summary": "Get list of StorageMiners",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.StorageMiner"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to storage_miners table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StorageMiners"
                ],
                "summary": "Add an record to storage_miners table",
                "parameters": [
                    {
                        "description": "Add StorageMiners",
                        "name": "StorageMiners",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StorageMiner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StorageMiner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/storageminers/{argID}": {
            "get": {
                "description": "GetStorageMiners is a function to get a single record from the storage_miners table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StorageMiners"
                ],
                "summary": "Get record from table StorageMiners by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StorageMiner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from storage_miners table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StorageMiners"
                ],
                "summary": "Update an record in table storage_miners",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update StorageMiners record",
                        "name": "StorageMiners",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StorageMiner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StorageMiner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from storage_miners table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StorageMiners"
                ],
                "summary": "Delete a record from storage_miners",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.StorageMiner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "GetAllUsers is a handler to get a slice of record(s) from users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get list of Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add to add a single record to users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Add an record to users table",
                "parameters": [
                    {
                        "description": "Add Users",
                        "name": "Users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/count": {
            "get": {
                "description": "GetNumberOfUsers is a handler to get the number of record(s) from users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get number of Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{argID}": {
            "get": {
                "description": "GetUsers is a function to get a single record from the users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get record from table Users by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single record from users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update an record in table users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Users record",
                        "name": "Users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single record from users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a record from users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CrudAPI": {
            "type": "object",
            "properties": {
                "create_url": {
                    "type": "string"
                },
                "delete_url": {
                    "type": "string"
                },
                "fetch_ddl_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "retrieve_many_url": {
                    "type": "string"
                },
                "retrieve_one_url": {
                    "type": "string"
                },
                "table_info": {
                    "$ref": "#/definitions/model.TableInfo"
                },
                "update_url": {
                    "type": "string"
                }
            }
        },
        "api.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "api.PagedResults": {
            "type": "object",
            "properties": {
                "data": {},
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_records": {
                    "type": "integer"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.AuthToken": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "expiry": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "upload_only": {
                    "type": "boolean"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "model.Autoretrieve": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "handle": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_connection": {
                    "type": "string"
                },
                "peer_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Collection": {
            "type": "object",
            "properties": {
                "c_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "model.CollectionRef": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "integer"
                },
                "content": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "model.ColumnInfo": {
            "type": "object",
            "properties": {
                "column_length": {
                    "type": "integer"
                },
                "column_type": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "database_type_name": {
                    "type": "string"
                },
                "database_type_pretty": {
                    "type": "string"
                },
                "default_value": {
                    "type": "string"
                },
                "go_field_name": {
                    "type": "string"
                },
                "go_field_type": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "is_array": {
                    "type": "boolean"
                },
                "is_auto_increment": {
                    "type": "boolean"
                },
                "is_nullable": {
                    "type": "boolean"
                },
                "is_primary_key": {
                    "type": "boolean"
                },
                "json_field_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "protobuf_field_name": {
                    "type": "string"
                },
                "protobuf_field_pos": {
                    "type": "integer"
                },
                "protobuf_field_type": {
                    "type": "string"
                }
            }
        },
        "model.Content": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "aggregate": {
                    "type": "boolean"
                },
                "aggregated_in": {
                    "type": "integer"
                },
                "cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "dag_split": {
                    "type": "boolean"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "failed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offloaded": {
                    "type": "boolean"
                },
                "origins": {
                    "type": "string"
                },
                "pin_meta": {
                    "type": "string"
                },
                "pinning": {
                    "type": "boolean"
                },
                "replace": {
                    "type": "boolean"
                },
                "replication": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "split_from": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.ContentDeal": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deal_id": {
                    "type": "integer"
                },
                "deal_uuid": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "dt_chan": {
                    "type": "string"
                },
                "failed": {
                    "type": "boolean"
                },
                "failed_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "miner": {
                    "type": "string"
                },
                "on_chain_at": {
                    "type": "string"
                },
                "prop_cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sealed_at": {
                    "type": "string"
                },
                "slashed": {
                    "type": "boolean"
                },
                "transfer_finished": {
                    "type": "string"
                },
                "transfer_started": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "model.Dealer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "handle": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_connection": {
                    "type": "string"
                },
                "open": {
                    "type": "boolean"
                },
                "peer_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DfeRecord": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "miner": {
                    "type": "string"
                },
                "miner_version": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.InviteCode": {
            "type": "object",
            "properties": {
                "claimed_by": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.MinerStorageAsk": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "max_piece_size": {
                    "type": "integer"
                },
                "min_piece_size": {
                    "type": "integer"
                },
                "miner": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "verified_price": {
                    "type": "string"
                }
            }
        },
        "model.ObjRef": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "object": {
                    "type": "integer"
                },
                "offloaded": {
                    "type": "integer"
                }
            }
        },
        "model.Object": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "last_access": {
                    "type": "string"
                },
                "reads": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "model.PieceCommRecord": {
            "type": "object",
            "properties": {
                "car_size": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "piece": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "model.ProposalRecord": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "prop_cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.RetrievalFailureRecord": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "miner": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.RetrievalSuccessRecord": {
            "type": "object",
            "properties": {
                "ask_price": {
                    "type": "string"
                },
                "average_speed": {
                    "type": "integer"
                },
                "cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "duration_ms": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "miner": {
                    "type": "string"
                },
                "num_payments": {
                    "type": "integer"
                },
                "peer": {
                    "type": "string"
                },
                "prop_cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "total_payment": {
                    "type": "string"
                }
            }
        },
        "model.Shuttle": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "handle": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_connection": {
                    "type": "string"
                },
                "open": {
                    "type": "boolean"
                },
                "peer_id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "private": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.StorageMiner": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "integer"
                },
                "suspended": {
                    "type": "boolean"
                },
                "suspended_reason": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "model.TableInfo": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ColumnInfo"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "d_id": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "flags": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "pass_hash": {
                    "type": "string"
                },
                "perm": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "storage_disabled": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}