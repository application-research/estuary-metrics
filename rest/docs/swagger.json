{
    "swagger": "2.0",
    "info": {
        "description": "Estuary Metrics API",
        "title": "Estuary Metrics API",
        "contact": {
            "name": "Outercore Engineering",
            "url": "http://me.com/terms.html",
            "email": "me@me.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.1"
    },
    "host": "localhost:3030/api/v1",
    "paths": {
        "/authtokens": {
            "get": {
                "description": "GetAllAuthTokens is a handler to get a slice of record(s) from auth_tokens table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthTokens"
                ],
                "summary": "Get list of AuthTokens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.AuthToken"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/authtokens/activecount": {
            "get": {
                "description": "GetAllActiveAuthTokenCount is a handler to get all record from the auth_tokens table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthTokens"
                ],
                "summary": "Get a single AuthTokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AuthToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/authtokens/dynamicquery": {
            "get": {
                "description": "GetAuthTokensDynamicQuery is a handler to get a slice of record(s) from auth_tokens table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthTokens"
                ],
                "summary": "Get list of AuthTokens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "dynamic query",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.AuthToken"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/authtokens/{argID}": {
            "get": {
                "description": "GetAuthTokens is a function to get a single record from the auth_tokens table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthTokens"
                ],
                "summary": "Get record from table AuthTokens by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AuthToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/autoretrieves": {
            "get": {
                "description": "GetAllAutoretrieves is a handler to get a slice of record(s) from autoretrieves table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autoretrieves"
                ],
                "summary": "Get list of Autoretrieves",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Autoretrieve"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/autoretrieves/dynamicquery": {
            "get": {
                "description": "GetAutoretrievesDynamicQuery is a function to get a slice of record(s) from autoretrieves table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autoretrieves"
                ],
                "summary": "Get list of Autoretrieves",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "dynamic query",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Autoretrieve"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/autoretrieves/{argID}": {
            "get": {
                "description": "GetAutoretrieves is a function to get a single record from the autoretrieves table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autoretrieves"
                ],
                "summary": "Get record from table Autoretrieves by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Autoretrieve"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collectionrefs": {
            "get": {
                "description": "GetAllCollectionRefs is a handler to get a slice of record(s) from collection_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionRefs"
                ],
                "summary": "Get list of CollectionRefs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.CollectionRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collectionrefs/dynamicquery": {
            "get": {
                "description": "GetCollectionsRefDynamicQuery is a handler to get a slice of record(s) from collection_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionRefs"
                ],
                "summary": "Get list of CollectionRefs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query string",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.CollectionRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collectionrefs/{argID}": {
            "get": {
                "description": "GetCollectionRefs is a function to get a single record from the collection_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CollectionRefs"
                ],
                "summary": "Get record from table CollectionRefs by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CollectionRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "description": "GetAllCollections is a handler to get a slice of record(s) from collections table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Get list of Collections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Collection"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collections/dynamicquery": {
            "get": {
                "description": "GetCollectionsDynamicQuery is a function to get a slice of record(s) from collections table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Get list of Collections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "dynamic query",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Collection"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/collections/{argID}": {
            "get": {
                "description": "GetCollections is a function to get a single record from the collections table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Get record from table Collections by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/contentdeals": {
            "get": {
                "description": "GetAllContentDeals is a handler to get a slice of record(s) from content_deals table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ContentDeals"
                ],
                "summary": "Get list of ContentDeals",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.ContentDeal"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/contentdeals/{argID}": {
            "get": {
                "description": "GetContentDeals is a function to get a single record from the content_deals table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ContentDeals"
                ],
                "summary": "Get record from table ContentDeals by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContentDeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/contents": {
            "get": {
                "description": "GetAllContents is a handler to get a slice of record(s) from contents table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contents"
                ],
                "summary": "Get list of Contents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Content"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/contents/{argID}": {
            "get": {
                "description": "GetContents is a function to get a single record from the contents table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contents"
                ],
                "summary": "Get record from table Contents by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Content"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/ddl": {
            "get": {
                "description": "GetDdlEndpoints is a function to get a list of ddl endpoints available for tables in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TableInfo"
                ],
                "summary": "Gets a list of ddl endpoints available for tables in the estuary database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/objectsapi.CrudAPI"
                        }
                    }
                }
            }
        },
        "/ddl/{argID}": {
            "get": {
                "description": "GetDdl is a function to get table info for a table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TableInfo"
                ],
                "summary": "Get table info for a table in the estuary database by argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/objectsapi.CrudAPI"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/dealers": {
            "get": {
                "description": "GetAllDealers is a handler to get a slice of record(s) from dealers table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dealers"
                ],
                "summary": "Get list of Dealers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Dealer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/dealers/{argID}": {
            "get": {
                "description": "GetDealers is a function to get a single record from the dealers table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dealers"
                ],
                "summary": "Get record from table Dealers by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dealer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/dferecords": {
            "get": {
                "description": "GetAllDfeRecords is a handler to get a slice of record(s) from dfe_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DfeRecords"
                ],
                "summary": "Get list of DfeRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.DfeRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/dferecords/{argID}": {
            "get": {
                "description": "GetDfeRecords is a function to get a single record from the dfe_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DfeRecords"
                ],
                "summary": "Get record from table DfeRecords by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DfeRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/environment/equinix/billing": {
            "get": {
                "description": "Get device usage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environment"
                ],
                "summary": "Get device usage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "createdBefore",
                        "name": "createdBefore",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "createdAfter",
                        "name": "createdAfter",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.DeviceInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/environment/equinix/info": {
            "get": {
                "description": "Get device info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environment"
                ],
                "summary": "Get device info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "createdBefore",
                        "name": "createdBefore",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "createdAfter",
                        "name": "createdAfter",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.DeviceInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/environment/equinix/list/usages": {
            "post": {
                "description": "Get device usages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environment"
                ],
                "summary": "Get device usages",
                "parameters": [
                    {
                        "description": "uuidGroup",
                        "name": "uuidGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.UuidGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/core.DeviceUsage"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/environment/equinix/usages": {
            "get": {
                "description": "Get device usage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environment"
                ],
                "summary": "Get device usage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "createdBefore",
                        "name": "createdBefore",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "createdAfter",
                        "name": "createdAfter",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.DeviceUsage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/invitecodes": {
            "get": {
                "description": "GetAllInviteCodes is a handler to get a slice of record(s) from invite_codes table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InviteCodes"
                ],
                "summary": "Get list of InviteCodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.InviteCode"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/invitecodes/{argID}": {
            "get": {
                "description": "GetInviteCodes is a function to get a single record from the invite_codes table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InviteCodes"
                ],
                "summary": "Get record from table InviteCodes by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.InviteCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/location/shuttle/{uuid}": {
            "get": {
                "description": "Get device info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environment"
                ],
                "summary": "Get device info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statsapi.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/minerstorageasks": {
            "get": {
                "description": "GetAllMinerStorageAsks is a handler to get a slice of record(s) from miner_storage_asks table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinerStorageAsks"
                ],
                "summary": "Get list of MinerStorageAsks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.MinerStorageAsk"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/minerstorageasks/{argID}": {
            "get": {
                "description": "GetMinerStorageAsks is a function to get a single record from the miner_storage_asks table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinerStorageAsks"
                ],
                "summary": "Get record from table MinerStorageAsks by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MinerStorageAsk"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/objects": {
            "get": {
                "description": "GetAllObjects is a handler to get a slice of record(s) from objects table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Get list of Objects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Object"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/objects/{argID}": {
            "get": {
                "description": "GetObjects is a function to get a single record from the objects table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Get record from table Objects by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/objrefs": {
            "get": {
                "description": "GetAllObjRefs is a handler to get a slice of record(s) from obj_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjRefs"
                ],
                "summary": "Get list of ObjRefs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.ObjRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/objrefs/{argID}": {
            "get": {
                "description": "GetObjRefs is a function to get a single record from the obj_refs table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjRefs"
                ],
                "summary": "Get record from table ObjRefs by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ObjRef"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/piececommrecords": {
            "get": {
                "description": "GetAllPieceCommRecords is a handler to get a slice of record(s) from piece_comm_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PieceCommRecords"
                ],
                "summary": "Get list of PieceCommRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.PieceCommRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/piececommrecords/{argData}": {
            "get": {
                "description": "GetPieceCommRecords is a function to get a single record from the piece_comm_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PieceCommRecords"
                ],
                "summary": "Get record from table PieceCommRecords by  argData",
                "operationId": "argData",
                "parameters": [
                    {
                        "type": "string",
                        "description": "data",
                        "name": "argData",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PieceCommRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/proposalrecords": {
            "get": {
                "description": "GetAllProposalRecords is a handler to get a slice of record(s) from proposal_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProposalRecords"
                ],
                "summary": "Get list of ProposalRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.ProposalRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/proposalrecords/{argPropCid}": {
            "get": {
                "description": "GetProposalRecords is a function to get a single record from the proposal_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProposalRecords"
                ],
                "summary": "Get record from table ProposalRecords by  argPropCid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prop_cid",
                        "name": "argPropCid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProposalRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/rank/miners/{top}": {
            "get": {
                "description": "Get list of Miners",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ranks"
                ],
                "summary": "Get list of Miners",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "top",
                        "name": "top",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dao.TopMiner"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/rank/users/collection/{top}": {
            "get": {
                "description": "Get list of Users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ranks"
                ],
                "summary": "Get list of Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "top",
                        "name": "top",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dao.TopCollectionUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/rank/users/{top}": {
            "get": {
                "description": "Get list of Users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ranks"
                ],
                "summary": "Get list of Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "top",
                        "name": "top",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dao.TopUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/retrievalfailurerecords": {
            "get": {
                "description": "GetAllRetrievalFailureRecords is a handler to get a slice of record(s) from retrieval_failure_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalFailureRecords"
                ],
                "summary": "Get list of RetrievalFailureRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.RetrievalFailureRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/retrievalfailurerecords/{argID}": {
            "get": {
                "description": "GetRetrievalFailureRecords is a function to get a single record from the retrieval_failure_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalFailureRecords"
                ],
                "summary": "Get record from table RetrievalFailureRecords by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalFailureRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/retrievalsuccessrecords": {
            "get": {
                "description": "GetAllRetrievalSuccessRecords is a handler to get a slice of record(s) from retrieval_success_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalSuccessRecords"
                ],
                "summary": "Get list of RetrievalSuccessRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.RetrievalSuccessRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/retrievalsuccessrecords/{argPropCid}": {
            "get": {
                "description": "GetRetrievalSuccessRecords is a function to get a single record from the retrieval_success_records table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RetrievalSuccessRecords"
                ],
                "summary": "Get record from table RetrievalSuccessRecords by  argPropCid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prop_cid",
                        "name": "argPropCid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RetrievalSuccessRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/shuttles": {
            "get": {
                "description": "GetAllShuttles is a handler to get a slice of record(s) from shuttles table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shuttles"
                ],
                "summary": "Get list of Shuttles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Shuttle"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/shuttles/{argID}": {
            "get": {
                "description": "GetShuttles is a function to get a single record from the shuttles table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shuttles"
                ],
                "summary": "Get record from table Shuttles by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Shuttle"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/stats/deal-metrics": {
            "get": {
                "description": "Returns the deal metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stats"
                ],
                "summary": "Returns the deal metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/statsapi.DealMetricsInfo"
                            }
                        }
                    }
                }
            }
        },
        "/stats/info": {
            "get": {
                "description": "Returns the public stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stats"
                ],
                "summary": "Returns the public stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statsapi.PublicStats"
                        }
                    }
                }
            }
        },
        "/stats/retrieval-rates": {
            "get": {
                "description": "Returns the retrieval stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stats"
                ],
                "summary": "Returns the retrieval stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statsapi.RetrievalStats"
                        }
                    }
                }
            }
        },
        "/stats/storage-rates": {
            "get": {
                "description": "Returns the storage rate stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stats"
                ],
                "summary": "Returns the storage rate stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statsapi.StorageRateStats"
                        }
                    }
                }
            }
        },
        "/stats/total-content-deals-attempted": {
            "get": {
                "description": "Returns the total number of content deals attempted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stats"
                ],
                "summary": "Returns the total number of content deals attempted",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/stats/total-files": {
            "get": {
                "description": "Returns the total number of files stored",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stats"
                ],
                "summary": "Returns the total number of files stored",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/stats/total-retrievals": {
            "get": {
                "description": "Get total number of retrieval deals attempted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stats"
                ],
                "summary": "Get total number of retrieval deals attempted",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/stats/total-storage": {
            "get": {
                "description": "Returns the total storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stats"
                ],
                "summary": "Returns the total storage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/storageminers": {
            "get": {
                "description": "GetAllStorageMiners is a handler to get a slice of record(s) from storage_miners table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StorageMiners"
                ],
                "summary": "Get list of StorageMiners",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.StorageMiner"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/storageminers/{argID}": {
            "get": {
                "description": "GetStorageMiners is a function to get a single record from the storage_miners table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StorageMiners"
                ],
                "summary": "Get record from table StorageMiners by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StorageMiner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "GetAllUsers is a handler to get a slice of record(s) from users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get list of Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page requested (defaults to 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of records in a page  (defaults to 20)",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "db sort order column",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/count": {
            "get": {
                "description": "GetNumberOfUsersWithinRange is a handler to get the number of record(s) from users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get number of Users within range",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/within-range": {
            "get": {
                "description": "GetNumberOfUsers is a handler to get the number of record(s) from users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get number of Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PagedResults"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{argID}": {
            "get": {
                "description": "GetUsers is a function to get a single record from the users table in the estuary database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get record from table Users by  argID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "argID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "ErrNotFound, db record for id not found - returns NotFound HTTP 404 not found error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "api.PagedResults": {
            "type": "object",
            "properties": {
                "data": {},
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_records": {
                    "type": "integer"
                }
            }
        },
        "core.DeviceInfo": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                },
                "allow_same_vlan_on_multiple_ports": {
                    "type": "boolean"
                },
                "always_pxe": {
                    "type": "boolean"
                },
                "billing_cycle": {
                    "type": "string"
                },
                "bonding_mode": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "object",
                    "properties": {
                        "avatar_thumb_url": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "full_name": {
                            "type": "string"
                        },
                        "href": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "level": {
                            "type": "string"
                        },
                        "short_id": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                "customdata": {
                    "type": "object"
                },
                "description": {},
                "device_type": {
                    "type": "string"
                },
                "facility": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "object",
                            "properties": {
                                "address": {
                                    "type": "string"
                                },
                                "address2": {
                                    "type": "string"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "coordinates": {
                                    "type": "object",
                                    "properties": {
                                        "latitude": {
                                            "type": "string"
                                        },
                                        "longitude": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "country": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "zip_code": {
                                    "type": "string"
                                }
                            }
                        },
                        "code": {
                            "type": "string"
                        },
                        "features": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "id": {
                            "type": "string"
                        },
                        "ip_ranges": {
                            "type": "array",
                            "items": {}
                        },
                        "metro": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "country": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "favorite": {
                    "type": "boolean"
                },
                "hostname": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {},
                "ip_addresses": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "type": "string"
                            },
                            "address_family": {
                                "type": "integer"
                            },
                            "assigned_to": {
                                "type": "object",
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                }
                            },
                            "cidr": {
                                "type": "integer"
                            },
                            "created_at": {
                                "type": "string"
                            },
                            "customdata": {
                                "type": "object"
                            },
                            "details": {},
                            "enabled": {
                                "type": "boolean"
                            },
                            "facility": {
                                "type": "object",
                                "properties": {
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string"
                                            },
                                            "address2": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "coordinates": {
                                                "type": "object",
                                                "properties": {
                                                    "latitude": {
                                                        "type": "string"
                                                    },
                                                    "longitude": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "zip_code": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "features": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "ip_ranges": {
                                        "type": "array",
                                        "items": {}
                                    },
                                    "metro": {
                                        "type": "object",
                                        "properties": {
                                            "code": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "gateway": {
                                "type": "string"
                            },
                            "global_ip": {
                                "type": "boolean"
                            },
                            "href": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "interface": {
                                "type": "object",
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                }
                            },
                            "manageable": {
                                "type": "boolean"
                            },
                            "management": {
                                "type": "boolean"
                            },
                            "metro": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "netmask": {
                                "type": "string"
                            },
                            "network": {
                                "type": "string"
                            },
                            "project": {
                                "type": "object",
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                }
                            },
                            "project_lite": {
                                "type": "object",
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                }
                            },
                            "public": {
                                "type": "boolean"
                            },
                            "tags": {
                                "type": "array",
                                "items": {}
                            }
                        }
                    }
                },
                "ipxe_script_url": {},
                "iqn": {
                    "type": "string"
                },
                "locked": {
                    "type": "boolean"
                },
                "metro": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string"
                        },
                        "country": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "network_frozen": {
                    "type": "boolean"
                },
                "network_ports": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "bond": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "data": {
                                "type": "object",
                                "properties": {
                                    "bonded": {
                                        "type": "boolean"
                                    },
                                    "mac": {
                                        "type": "string"
                                    }
                                }
                            },
                            "disbond_operation_supported": {
                                "type": "boolean"
                            },
                            "href": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "native_virtual_network": {},
                            "network_type": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "virtual_networks": {
                                "type": "array",
                                "items": {}
                            }
                        }
                    }
                },
                "operating_system": {
                    "type": "object",
                    "properties": {
                        "distro": {
                            "type": "string"
                        },
                        "distro_label": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "licensed": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "preinstallable": {
                            "type": "boolean"
                        },
                        "pricing": {
                            "type": "object"
                        },
                        "provisionable_on": {
                            "type": "array",
                            "items": {}
                        },
                        "slug": {
                            "type": "string"
                        },
                        "version": {
                            "type": "string"
                        }
                    }
                },
                "plan": {
                    "type": "object",
                    "properties": {
                        "available_in": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "object",
                                        "properties": {
                                            "hour": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "available_in_metros": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "object",
                                        "properties": {
                                            "hour": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "class": {
                            "type": "string"
                        },
                        "deployment_types": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "legacy": {
                            "type": "boolean"
                        },
                        "line": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "pricing": {
                            "type": "object",
                            "properties": {
                                "hour": {
                                    "type": "number"
                                }
                            }
                        },
                        "reservation_pricing": {
                            "type": "object",
                            "properties": {
                                "am": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "ch": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "da": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "dc": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "fr": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "hk": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "la": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "ld": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "md": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "ny": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "one_month": {
                                    "type": "object",
                                    "properties": {
                                        "month": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "one_year": {
                                    "type": "object",
                                    "properties": {
                                        "month": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "pa": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "se": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "sg": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "sl": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "sp": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "sv": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "sy": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "three_year": {
                                    "type": "object",
                                    "properties": {
                                        "month": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "tr": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "ty": {
                                    "type": "object",
                                    "properties": {
                                        "one_month": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "one_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "three_year": {
                                            "type": "object",
                                            "properties": {
                                                "month": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "slug": {
                            "type": "string"
                        },
                        "specs": {
                            "type": "object",
                            "properties": {
                                "cpus": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "type": "integer"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "drives": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "category": {
                                                "type": "string"
                                            },
                                            "count": {
                                                "type": "integer"
                                            },
                                            "size": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "features": {
                                    "type": "object",
                                    "properties": {
                                        "raid": {
                                            "type": "boolean"
                                        },
                                        "txt": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "memory": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "nics": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "type": "integer"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "project": {
                    "type": "object",
                    "properties": {
                        "href": {
                            "type": "string"
                        }
                    }
                },
                "project_lite": {
                    "type": "object",
                    "properties": {
                        "href": {
                            "type": "string"
                        }
                    }
                },
                "short_id": {
                    "type": "string"
                },
                "ssh_keys": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "href": {
                                "type": "string"
                            }
                        }
                    }
                },
                "state": {
                    "type": "string"
                },
                "storage": {
                    "type": "object"
                },
                "switch_uuid": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "userdata": {
                    "type": "string"
                },
                "volumes": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "core.DeviceUsage": {
            "type": "object",
            "properties": {
                "info": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        }
                    }
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "price": {
                                "type": "number"
                            },
                            "quantity": {
                                "type": "number"
                            },
                            "total": {
                                "type": "number"
                            },
                            "unit": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "core.UuidGroup": {
            "type": "object",
            "properties": {
                "createdAfter": {
                    "type": "string"
                },
                "createdBefore": {
                    "type": "string"
                },
                "uuids": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "uuid": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "dao.TopCollectionUser": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dao.TopMiner": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "miner": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dao.TopUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "total_bytes": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.AuthToken": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "expiry": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "upload_only": {
                    "type": "boolean"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "model.Autoretrieve": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "handle": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_connection": {
                    "type": "string"
                },
                "peer_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Collection": {
            "type": "object",
            "properties": {
                "c_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "model.CollectionRef": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "integer"
                },
                "content": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "model.ColumnInfo": {
            "type": "object",
            "properties": {
                "column_length": {
                    "type": "integer"
                },
                "column_type": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "database_type_name": {
                    "type": "string"
                },
                "database_type_pretty": {
                    "type": "string"
                },
                "default_value": {
                    "type": "string"
                },
                "go_field_name": {
                    "type": "string"
                },
                "go_field_type": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "is_array": {
                    "type": "boolean"
                },
                "is_auto_increment": {
                    "type": "boolean"
                },
                "is_nullable": {
                    "type": "boolean"
                },
                "is_primary_key": {
                    "type": "boolean"
                },
                "json_field_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "protobuf_field_name": {
                    "type": "string"
                },
                "protobuf_field_pos": {
                    "type": "integer"
                },
                "protobuf_field_type": {
                    "type": "string"
                }
            }
        },
        "model.Content": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "aggregate": {
                    "type": "boolean"
                },
                "aggregated_in": {
                    "type": "integer"
                },
                "cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "dag_split": {
                    "type": "boolean"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "failed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offloaded": {
                    "type": "boolean"
                },
                "origins": {
                    "type": "string"
                },
                "pin_meta": {
                    "type": "string"
                },
                "pinning": {
                    "type": "boolean"
                },
                "replace": {
                    "type": "boolean"
                },
                "replication": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "split_from": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.ContentDeal": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deal_id": {
                    "type": "integer"
                },
                "deal_uuid": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "dt_chan": {
                    "type": "string"
                },
                "failed": {
                    "type": "boolean"
                },
                "failed_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "miner": {
                    "type": "string"
                },
                "on_chain_at": {
                    "type": "string"
                },
                "prop_cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sealed_at": {
                    "type": "string"
                },
                "slashed": {
                    "type": "boolean"
                },
                "transfer_finished": {
                    "type": "string"
                },
                "transfer_started": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "model.Dealer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "handle": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_connection": {
                    "type": "string"
                },
                "open": {
                    "type": "boolean"
                },
                "peer_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DfeRecord": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "miner": {
                    "type": "string"
                },
                "miner_version": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.InviteCode": {
            "type": "object",
            "properties": {
                "claimed_by": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.MinerStorageAsk": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "max_piece_size": {
                    "type": "integer"
                },
                "min_piece_size": {
                    "type": "integer"
                },
                "miner": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "verified_price": {
                    "type": "string"
                }
            }
        },
        "model.ObjRef": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "object": {
                    "type": "integer"
                },
                "offloaded": {
                    "type": "integer"
                }
            }
        },
        "model.Object": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "last_access": {
                    "type": "string"
                },
                "reads": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "model.PieceCommRecord": {
            "type": "object",
            "properties": {
                "car_size": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "piece": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "model.ProposalRecord": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "prop_cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.RetrievalFailureRecord": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "miner": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.RetrievalSuccessRecord": {
            "type": "object",
            "properties": {
                "ask_price": {
                    "type": "string"
                },
                "average_speed": {
                    "type": "integer"
                },
                "cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "duration_ms": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "miner": {
                    "type": "string"
                },
                "num_payments": {
                    "type": "integer"
                },
                "peer": {
                    "type": "string"
                },
                "prop_cid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "total_payment": {
                    "type": "string"
                }
            }
        },
        "model.Shuttle": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "handle": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_connection": {
                    "type": "string"
                },
                "open": {
                    "type": "boolean"
                },
                "peer_id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "private": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.StorageMiner": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "integer"
                },
                "suspended": {
                    "type": "boolean"
                },
                "suspended_reason": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "model.TableInfo": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ColumnInfo"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "d_id": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "flags": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "pass_hash": {
                    "type": "string"
                },
                "perm": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "storage_disabled": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "objectsapi.CrudAPI": {
            "type": "object",
            "properties": {
                "create_url": {
                    "type": "string"
                },
                "delete_url": {
                    "type": "string"
                },
                "fetch_ddl_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "retrieve_many_url": {
                    "type": "string"
                },
                "retrieve_one_url": {
                    "type": "string"
                },
                "table_info": {
                    "$ref": "#/definitions/model.TableInfo"
                },
                "update_url": {
                    "type": "string"
                }
            }
        },
        "sql.NullInt64": {
            "type": "object",
            "properties": {
                "int64": {
                    "type": "integer"
                },
                "valid": {
                    "description": "Valid is true if Int64 is not NULL",
                    "type": "boolean"
                }
            }
        },
        "statsapi.DealMetricsInfo": {
            "type": "object",
            "properties": {
                "dealsAttempted": {
                    "type": "integer"
                },
                "dealsFailed": {
                    "type": "integer"
                },
                "dealsOnChain": {
                    "type": "integer"
                },
                "dealsOnChainBytes": {
                    "type": "integer"
                },
                "dealsSealed": {
                    "type": "integer"
                },
                "dealsSealedBytes": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "statsapi.Location": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string"
                        },
                        "address2": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string"
                        },
                        "coordinates": {
                            "type": "object",
                            "properties": {
                                "latitude": {
                                    "type": "string"
                                },
                                "longitude": {
                                    "type": "string"
                                }
                            }
                        },
                        "country": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "zip_code": {
                            "type": "string"
                        }
                    }
                },
                "ip_address": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string"
                        },
                        "gateway": {
                            "type": "string"
                        },
                        "network": {
                            "type": "string"
                        }
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "statsapi.PublicStats": {
            "type": "object",
            "properties": {
                "dealsOnChain": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "totalBytesUploaded": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "totalFiles": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "totalObjectsRef": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "totalStorage": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "totalStorageMiners": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "totalUsers": {
                    "$ref": "#/definitions/sql.NullInt64"
                }
            }
        },
        "statsapi.RetrievalStats": {
            "type": "object",
            "properties": {
                "dealAcceptanceRate": {
                    "type": "string"
                },
                "dealFailureRate": {
                    "type": "string"
                },
                "dealSuccessRate": {
                    "type": "string"
                },
                "failedDealsDueToUndialableMiners": {
                    "type": "string"
                },
                "timeToFirstByte": {
                    "type": "string"
                },
                "totalNumberOfFailedRetrieval": {
                    "type": "string"
                },
                "totalNumberOfSuccessfulRetrieval": {
                    "type": "string"
                },
                "totalRetrievalDealProposalAccepted": {
                    "type": "string"
                },
                "totalRetrievalDealProposalRejected": {
                    "type": "string"
                },
                "totalRetrievalDealsProposed": {
                    "type": "string"
                }
            }
        },
        "statsapi.StorageRateStats": {
            "type": "object",
            "properties": {
                "dealFailureRate": {
                    "type": "string"
                },
                "dealSuccessRate": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}